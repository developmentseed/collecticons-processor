const { assert } = require('chai');
const path = require('path');

const generateFonts = require('../src/font-generator');

describe('Font generator', function () {
  it('Should throw error when called without fontName', async function () {
    try {
      await generateFonts();
    } catch (error) {
      assert.instanceOf(error, TypeError);
      assert.equal(error.message, 'Missing fontName argument');
      return;
    }
    assert.fail('Error not thrown');
  });

  it('Should throw error when called without icons', async function () {
    try {
      await generateFonts({ fontName: 'collecticons' });
    } catch (error) {
      assert.instanceOf(error, TypeError);
      assert.equal(error.message, 'Invalid or empty icons argument');
      return;
    }
    assert.fail('Error not thrown');
  });

  it('Should throw error when called with non array icons', async function () {
    try {
      await generateFonts({ fontName: 'collecticons', icons: 'this' });
    } catch (error) {
      assert.instanceOf(error, TypeError);
      assert.equal(error.message, 'Invalid or empty icons argument');
      return;
    }
    assert.fail('Error not thrown');
  });

  it('Should throw error when called with empty icons', async function () {
    try {
      await generateFonts({ fontName: 'collecticons', icons: [] });
    } catch (error) {
      assert.instanceOf(error, TypeError);
      assert.equal(error.message, 'Invalid or empty icons argument');
      return;
    }
    assert.fail('Error not thrown');
  });

  it('Should return an object with all the generated fonts', async function () {
    const icons = [
      {
        file: path.resolve(__dirname, 'fixtures/small-icons/book.svg'),
        name: 'book',
        codepoint: 0xf101
      },
      {
        file: path.resolve(__dirname, 'fixtures/small-icons/chevron-left.svg'),
        name: 'chevron-left',
        codepoint: 0xf102
      }
    ];

    const expected = {
      svg: Buffer.from('PD94bWwgdmVyc2lvbj0iMS4wIiBzdGFuZGFsb25lPSJubyI/Pgo8IURPQ1RZUEUgc3ZnIFBVQkxJQyAiLS8vVzNDLy9EVEQgU1ZHIDEuMS8vRU4iICJodHRwOi8vd3d3LnczLm9yZy9HcmFwaGljcy9TVkcvMS4xL0RURC9zdmcxMS5kdGQiID4KPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciPgo8ZGVmcz4KICA8Zm9udCBpZD0iY29sbGVjdGljb25zIiBob3Jpei1hZHYteD0iMTAyNCI+CiAgICA8Zm9udC1mYWNlIGZvbnQtZmFtaWx5PSJjb2xsZWN0aWNvbnMiCiAgICAgIHVuaXRzLXBlci1lbT0iMTAyNCIgYXNjZW50PSIxMDI0IgogICAgICBkZXNjZW50PSIwIiAvPgogICAgPG1pc3NpbmctZ2x5cGggaG9yaXotYWR2LXg9IjAiIC8+CiAgICA8Z2x5cGggZ2x5cGgtbmFtZT0iYm9vayIKICAgICAgdW5pY29kZT0iJiN4RjEwMTsiCiAgICAgIGhvcml6LWFkdi14PSIxMDI0IiBkPSJNMzIwIDI1Nkg4OTZWMTAyNEgyNTZDMTg1LjYgMTAyNCAxMjggOTY2LjQgMTI4IDg5NlYxMjhDMTI4IDU3LjYgMTg1LjYgMCAyNTYgMEg4OTZWMTI4SDMyMEMyODEuNiAxMjggMjU2IDE1My42IDI1NiAxOTJTMjgxLjYgMjU2IDMyMCAyNTZ6TTMyMCA4OTZINzY4Vjc2OEgzMjBWODk2eiIgLz4KICAgIDxnbHlwaCBnbHlwaC1uYW1lPSJib29rLTEiCiAgICAgIHVuaWNvZGU9IiYjeDYyOyYjeDZGOyYjeDZGOyYjeDZCOyIKICAgICAgaG9yaXotYWR2LXg9IjEwMjQiIGQ9Ik0zMjAgMjU2SDg5NlYxMDI0SDI1NkMxODUuNiAxMDI0IDEyOCA5NjYuNCAxMjggODk2VjEyOEMxMjggNTcuNiAxODUuNiAwIDI1NiAwSDg5NlYxMjhIMzIwQzI4MS42IDEyOCAyNTYgMTUzLjYgMjU2IDE5MlMyODEuNiAyNTYgMzIwIDI1NnpNMzIwIDg5Nkg3NjhWNzY4SDMyMFY4OTZ6IiAvPgogICAgPGdseXBoIGdseXBoLW5hbWU9ImNoZXZyb24tbGVmdCIKICAgICAgdW5pY29kZT0iJiN4RjEwMjsiCiAgICAgIGhvcml6LWFkdi14PSIxMDI0IiBkPSJNNzk0LjQ5NiA5MC40OTZMMzcyLjk5MiA1MTJMNzk0LjQ5NiA5MzMuNTA0TDcwNCAxMDI0TDE5MiA1MTJMNzA0IDB6IiAvPgogICAgPGdseXBoIGdseXBoLW5hbWU9ImNoZXZyb24tbGVmdC0xIgogICAgICB1bmljb2RlPSImI3g2MzsmI3g2ODsmI3g2NTsmI3g3NjsmI3g3MjsmI3g2RjsmI3g2RTsmI3gyRDsmI3g2QzsmI3g2NTsmI3g2NjsmI3g3NDsiCiAgICAgIGhvcml6LWFkdi14PSIxMDI0IiBkPSJNNzk0LjQ5NiA5MC40OTZMMzcyLjk5MiA1MTJMNzk0LjQ5NiA5MzMuNTA0TDcwNCAxMDI0TDE5MiA1MTJMNzA0IDB6IiAvPgogIDwvZm9udD4KPC9kZWZzPgo8L3N2Zz4K', 'base64').toString(),
      ttf: Buffer.from('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', 'base64'),
      woff: Buffer.from('d09GRgABAAAAAAUMAAsAAAAACHAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAAGEAAACIIRsl4k9TLzIAAAFsAAAAPQAAAFZWm1B0Y21hcAAAAawAAADXAAACfAp4CHtnbHlmAAAChAAAAHcAAACA8ZvZwGhlYWQAAAL8AAAALQAAADZa6qX8aGhlYQAAAywAAAAYAAAAJAeBBBFobXR4AAADRAAAABAAAABACAAAAGxvY2EAAANUAAAAEAAAACIB6gHAbWF4cAAAA2QAAAAeAAAAIAEcACRuYW1lAAADhAAAATgAAAKCLhjoInBvc3QAAAS8AAAAUAAAAHHLJ632eJxNjD0KgDAMRl9r1fq/iqdwcnQSJ0cv0EmE4uT9MbYIBkK+lxeCAkpGZvSybjutd/fFgCHW6/9Z+fNw2I/EmTCt9ISWX33YRmNIQ9LU5HJTiDdUQo1QSydWk5A9WW4GQAAAAHicY2BkaGCcwMDKwMDUyXSGgYGhH0IzvmYwYuQAijKwMjNgBQFprikMDgy6H5lYQNwYIMnIAMEMAMoTCK8AAAB4nM2STQ4BQRCFv57xb/ysREScgEuZEAkZiYgjOJCVA7jQnIBX3bXDwk51vkW/nq55XVVAE8jFUjQg3AlY3KSGqOf0ot7gqv2EsZQWK0q27Dhw5MSZS509nzpfsWYjfU/leoj6ewTlmjBlpjVn4QuKmL/DkLbcDejrzz1GdHUj07XWx2zfo/jx+xi5HJgBmjKguiQDfxPpTQ/fjbC6J+xk7VhfS8eqtnE6YusMxc7Rc9W3hM3FwRmIyumLo6O6qMcJzYi6nTA/F0dFq0PC5qnOEmQvfXMh5wB4nB1MSwqDQBRLZuzCjSAqhRYLz6F6gH4WXc057GXeZeo5vNiMPhtCCEkIHLBtXgugwRmg1DJU7Or2xoe8ZBif70Y6YXQxafgEo9O09iH0XHMkPCxKh+i/UzuBwV/t8wTcS04l/SV/+ZszHGYuXMzlY7UD3R0ZEwB4nGNgZGBgAOKVXm/exPPbfGXgZmEAgRrVDQ0I+v9/5gawOAcDE4gCAD19Cq0AAAB4nGNgZGBgYQABCMncwMDIgAoEAAsMAJ54nGNgYGBggWJyAAACEAAJeJxjYAACLQYH3BAANeQDq3icY2BkYGAQYJBgYGIAARDJBYQMDP/BfAYADIABQQAAeJx1kj1uwkAUhGfNTxSIoihFQpFipfQ2tKQEQYtAojfmCSwtXrRekLhDjpJj5AQ5QA6QU2QwW7ixrbW/Gc+zn58WwDN+oXA7nrhurPBAdeMId3gL3KL/HrhNTgJ30MdH4C79WeAe08vAfbzixDeo9j2VxmdghQG+Akd4xHfgFv2fwG3yX+AOXlQUuIuBGgTuYaaGgfuI1XkqZzH2eJDC65XINrPGSObzzBblUnYnk7q6Vee1uDK3hR7Fw7o9l0Jc6mWrNxc9qT3QC2czKUvr9t4fx0lSr4pzm2AKwZnLwOKIA6mA5xRWJMEWGX3DU0geeaULlJyeYMe5GaRwjakmf03H8Z5XWmOEGMPG9Lzq6lqR0r92pbHBhddJQ4XGgmlLLVQlyWHPhOc/jrk7ksZvxVVPyT/FSXbpeJxtwUsKgCAUQNF3+2f/hbgpxRCSHoS4/gZNO0cq+Rj5t1NR09DS0TMwYpiYWVjZ2DmkcarX7GMoj942hTPjUC48kUDh4caSOMkiL3GZDI8=', 'base64'),
      woff2: Buffer.from('d09GMgABAAAAAANUAAsAAAAACHAAAAMFAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHIEIBlYAhHwKgQCBIgE2AiQDQAsiAAQgBYUCB3EbqAcRFZxJyH4m2LYR1lgvef7wxPGkiqovEVBr/9mzO4/ggIj3EN05SlxUVFRYhsunPJH+fvw2Z20e2oWCVeqszjP20OMfX5gggNu+iyORGGiBRv7Divg8x4zXBbZvOqI9z+IKSst8Hm0TGEhpevpsYHFVdH6kZ27N20C/GxE+pGjEiJLhS2wXAWUjTZfMnb90rfrRXWeP6yyS0UBLDUcPHdilWEKiiHlFwXiJso6GxnRFOZ6WqCooKiknQoVQ262uIUik8oIsvJAjeZh8g+f1/uFXo0MnkUvJ6pX75+0107C/kwhbYygNlueQYigi4RMz+rFUyKJUOT+6h/aaUbYdZo/9DjrqhNPOOv930sIEgt32SY44Tgp1xBG0V0FHnSVddXdRfVs1+K+xIKemIiprKAkSQh7LuiqY5hU/Z8hxov8BmnEoX8cbGLahit1IsQd57EMR+1HHQRRwBDkcRQ3HUcEJRJxGGWfRwHlpib+DSbUkICqmCXrGTOiOQcTalu3JlNajDdrGuqdRqD/65nP57ItvK43QTvvpzc921FSv7D+wfu++GWbK+rwa1EefQa/6ZNnMbk3u3fXG59nnRr3Z/MGH6ti0qYV+QgJapFkEaZcVWfB68W+/7WhM/b9Ysceu9jurer+1OI4t/AaavX2ahbc1bwYRSXJAU8du4QRlbWLJfK393NPadCcTVDUbEgVdkarqQ4iUEcipmIK8qvko62P18ooOzkmFWEJPTxKCjj5Cou5rpDr6iRApvyCnfYjI6xgelM0Xh/DPLCd++Lz4gGXooRw9gCIXZuSuyUXZO6qRU3OuwjVvGNuIosgPr154gYJJHQrK/nQor6OrkRzWiqmdG+IgeHAWv5FgcgQfwMSgB4pDHgAKOcEY5Jzm+PEU6w4qI5Yyjoas/DcwrIYmRyK+0Gm+BFK5XSkHBeST+SMHB7lie5EDyxJGzXEGsUAb6mP241iDqVTlBuTimmEmyYqq6YZp2Q6ny20fFtkv3Sr/8DGiPEbpphnRydXgw1A8rOTCBAAA', 'base64')
    };

    const fonts = await generateFonts({
      fontName: 'collecticons',
      icons
    });

    assert.deepEqual(fonts, expected);
  });
});
